[{"C:\\Users\\Admin\\Desktop\\react-app\\src\\index.js":"1","C:\\Users\\Admin\\Desktop\\react-app\\src\\App.js":"2","C:\\Users\\Admin\\Desktop\\react-app\\src\\components\\Login\\Login.js":"3","C:\\Users\\Admin\\Desktop\\react-app\\src\\components\\Home\\Home.js":"4","C:\\Users\\Admin\\Desktop\\react-app\\src\\components\\MainHeader\\MainHeader.js":"5","C:\\Users\\Admin\\Desktop\\react-app\\src\\components\\MainHeader\\Navigation.js":"6","C:\\Users\\Admin\\Desktop\\react-app\\src\\components\\UI\\Card\\Card.js":"7","C:\\Users\\Admin\\Desktop\\react-app\\src\\components\\UI\\Button\\Button.js":"8","C:\\Users\\Admin\\Desktop\\react-app\\src\\store\\auth-context.js":"9"},{"size":286,"mtime":1644172183372,"results":"10","hashOfConfig":"11"},{"size":1325,"mtime":1644171864454,"results":"12","hashOfConfig":"11"},{"size":5810,"mtime":1644171777316,"results":"13","hashOfConfig":"11"},{"size":460,"mtime":1644171809290,"results":"14","hashOfConfig":"11"},{"size":307,"mtime":1644170250348,"results":"15","hashOfConfig":"11"},{"size":823,"mtime":1644170416442,"results":"16","hashOfConfig":"11"},{"size":218,"mtime":1616577728000,"results":"17","hashOfConfig":"11"},{"size":353,"mtime":1616577728000,"results":"18","hashOfConfig":"11"},{"size":992,"mtime":1644172171896,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jvmfqt",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Admin\\Desktop\\react-app\\src\\index.js",[],"C:\\Users\\Admin\\Desktop\\react-app\\src\\App.js",[],["40","41"],"C:\\Users\\Admin\\Desktop\\react-app\\src\\components\\Login\\Login.js",["42"],"import React, { useState, useEffect, useReducer, useContext } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport AuthContext from \"../../store/auth-context\";\n// we can pass the function outside because inside this reducer function we dont need any data i.e. generated inside of the reducer function\n//it does not need to interact with anything inside of the component function\n// all the data it required will be passed into it when it is executed by react automatically\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.includes(\"@\") };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.includes(\"@\") };\n  }\n  return { value: \"\", isValid: false };\n};\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return { value: action.val, isValid: action.val.trim().length > 6 };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return { value: state.value, isValid: state.value.trim().length > 6 };\n  }\n  return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n  const authCtx = useState(AuthContext);\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: false,\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: false,\n  });\n\n  // useEffect(() => {\n  //   console.log(\"EFFECT RUNNING\"); //runs after every keystroke in enteredPassword.\n  //   return () => {\n  //     console.log(\"Effect cleanUp\"); //will run before the whole state function is run first time\n  //   }; // when we remove the dependency the return will execute when the component is remove from DOM\n  // }, [enteredPassword]);\n\n  /// use the below code to overcome the running of useEffect even after the input is valid and adding more character in input will never change the value of validity\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState;\n\n  useEffect(() => {\n    const identifier = setTimeout(() => {\n      console.log(\"checking form validity\"); // to set timeout to take all the entered value in a single take when the user stops typing for 5sec.\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n\n    return () => {\n      console.log(\"clean up code\"); //this line is run always 1st, after the 1st component reuse is made.\n      clearTimeout(identifier); //to clear the timer before setting the new timer in taking the value from input field\n    };\n  }, [emailIsValid, passwordIsValid]);\n\n  const emailChangeHandler = (event) => {\n    // setEnteredEmail(event.target.value);\n    //using reducer\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n    //we need to use arrow function in setFormIsValid if the next state update depends on the prev state snapshot of the same state\n    // but here we depend on the snapshot of different states The function has to be in the following form :-\n    // setFormIsValid(() => {});\n    // setFormIsValid(event.target.value.includes(\"@\") && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = (event) => {\n    // setEnteredPassword(event.target.value);\n    // setFormIsValid(\n    //   enteredEmail.includes(\"@\") && event.target.value.trim().length > 6\n    // );\n    //using Reducer\n    dispatchPassword({ type: \"USER_INPUT\", val: event.target.value });\n    setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(enteredEmail.includes(\"@\")); //we need use function here as at somepoint the react can take the previous entered value and check for validity\n    //using reducer\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  }; //here setEmailIsValid always give the latest state update of emaiIsValid State not for the enteredEmail state\n\n  const validatePasswordHandler = () => {\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n    //using reducer\n    dispatchPassword({ type: \"INPUT_BLUR\" });\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    // props.onLogin(enteredEmail, enteredPassword);\n    //using reducer\n    authCtx.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","C:\\Users\\Admin\\Desktop\\react-app\\src\\components\\Home\\Home.js",[],"C:\\Users\\Admin\\Desktop\\react-app\\src\\components\\MainHeader\\MainHeader.js",[],"C:\\Users\\Admin\\Desktop\\react-app\\src\\components\\MainHeader\\Navigation.js",[],"C:\\Users\\Admin\\Desktop\\react-app\\src\\components\\UI\\Card\\Card.js",[],"C:\\Users\\Admin\\Desktop\\react-app\\src\\components\\UI\\Button\\Button.js",[],"C:\\Users\\Admin\\Desktop\\react-app\\src\\store\\auth-context.js",["43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":50,"nodeType":"50","messageId":"51","endLine":1,"endColumn":60},{"ruleId":"52","severity":1,"message":"53","line":40,"column":1,"nodeType":"54","endLine":40,"endColumn":52},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]